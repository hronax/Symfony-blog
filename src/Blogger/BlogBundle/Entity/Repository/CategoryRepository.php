<?php

namespace Blogger\BlogBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends EntityRepository
{
    public function getCategoriesList()
    {
        $qb = $this->createQueryBuilder('c')
            ->select('c, b')
            ->leftJoin('c.blogs', 'b')
            ->addOrderBy('c.name', 'ASC');

        return $qb->getQuery()
            ->getResult();
    }

    public function getDefaultCategory() {
        $qb = $this->createQueryBuilder('c')
            ->select('c')
            ->where('c.id = 1');
        return $qb->getQuery()
            ->getOneOrNullResult();
    }

    public function getCategoriesListWithBlogs() {
        $qb = $this->createQueryBuilder('c')
            ->select('c', 'b')
            ->innerJoin('c.blogs', 'b')
            ->where('b.posted = 1')
            ->addOrderBy('c.name', 'ASC');

        return $qb->getQuery()
            ->getResult();
    }

    public function isCategorySlugUnique($slug) {
        $qb = $this->createQueryBuilder('c')
            ->select('c')
            ->where('c.slug = :slug')
            ->setParameter('slug', $slug);
        if($qb->getQuery()->getResult())
            return false;
        else
            return true;
    }

    public function findBySlug($slug) {
        $qb = $this->createQueryBuilder('c')
            ->select('c')
            ->where('c.slug = :slug')
            ->setParameter('slug', $slug);
        return $qb->getQuery()->getOneOrNullResult();
    }
}