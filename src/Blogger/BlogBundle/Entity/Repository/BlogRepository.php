<?php

namespace Blogger\BlogBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * BlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogRepository extends EntityRepository
{
    public function getLatestBlogs($posted = true, $limit = null)
    {
        $qb = $this->createQueryBuilder('b')
            ->select('b', 'c', 't')
            ->leftJoin('b.comments', 'c')
            ->leftJoin('b.tags', 't')
            ->addOrderBy('b.created', 'DESC');

        if (false === is_null($limit))
            $qb->setMaxResults($limit);
        if ($posted === false)
            $qb->where('b.posted = :posted')
                ->setParameter('posted', true);

        return $qb->getQuery()
            ->getResult();
    }

    public function getBlogsInCategory($catId) {
        $qb = $this->createQueryBuilder('b')
            ->select('b', 'c', 't')
            ->leftJoin('b.comments', 'c')
            ->leftJoin('b.tags', 't')
            ->where('b.category = :id')
            ->setParameter('id', $catId)
            ->addOrderBy('b.created', 'DESC');

        $qb->andWhere('b.posted = :posted')
            ->setParameter('posted', true);

        return $qb->getQuery()
            ->getResult();
    }

    public function getBlogsOnTag($tagId) {
        $qb = $this->createQueryBuilder('b')
            ->select('b', 'c', 't')
            ->leftJoin('b.comments', 'c')
            ->leftJoin('b.tags', 't')
            ->where('t.id = :id')
            ->setParameter('id', $tagId)
            ->addOrderBy('b.created', 'DESC');

        $qb->andWhere('b.posted = :posted')
            ->setParameter('posted', true);

        return $qb->getQuery()
            ->getResult();
    }
}
